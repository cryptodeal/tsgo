// Code generated by tsgo. DO NOT EDIT.
/* eslint-disable */

//////////
// source: generic.go

/**
 * Comment for UnionType
 */
export type UnionType = 
    /**
     * Comment for fields are possible
     */
    number /* uint64 */ | Istring | boolean | undefined // comment after
;
export type Derived = 
    number /* int */ | Istring // Line comment
;
export type Any = 
    Istring | Iany;
export type Empty = any;
export type Something = Iany;

export interface IEmptyStruct {
}
export interface IValAndPtr<V extends Iany, PT extends (IV | undefined), Unused extends number /* uint64 */> {
  Val: IIV;
  /**
   * Comment for ptr field
   */
  Ptr: IIPT; // ptr line comment
}
export interface IABCD<A extends Istring, B extends Istring, C extends IUnionType, D extends number /* int64 */ | boolean> {
  a: IIA;
  b: IIB;
  c: IIC;
  d: IID;
}
export interface IFoo<A extends Istring | number /* uint64 */, B extends (IA | undefined)> {
  Bar: IIA;
  Boo: IIB;
}
export interface IWithFooGenericTypeArg<A extends IFoo<Istring, Istring | undefined>> {
  some_field: IIA;
}
export interface ISingle<S extends Istring | number /* uint */> {
  Field: IIS;
}
export type SingleSpecific = ISingle<Istring>;
